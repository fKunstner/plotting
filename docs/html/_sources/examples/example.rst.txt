.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_example.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_examples_example.py:


Showcase
========================================


.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np
    import fplt

    import warnings

    warnings.filterwarnings(
        "ignore",
        category=UserWarning,
        message="Matplotlib is currently using agg, which is a"
        " non-GUI backend, so cannot show the figure.",
    )







Loading some data to plot


.. code-block:: default


    np.random.seed(0)
    data = {
        "x1": list(range(100)),
        "y1": [np.exp(-t) * (1 + np.random.randn() ** 2) for t in range(100)],
        "x2": list(range(100)),
        "y2": [1 / (t + 1) * (1 + 5 * np.random.randn() ** 2) for t in range(100)],
    }








Preparing the figure and make a grid


.. code-block:: default


    fig = plt.figure(figsize=(8, 3))
    ax1, ax2 = fplt.make_grid(fig, nrows=1, ncols=2)

    plt.show()




.. image:: /examples/images/sphx_glr_example_001.png
    :class: sphx-glr-single-img





Adding the data


.. code-block:: default


    fig = plt.figure(figsize=(8, 3))
    ax1, ax2 = fplt.make_grid(fig, nrows=1, ncols=2)

    (lh1,) = ax1.plot(data["x1"], data["y1"])
    (lh2,) = ax2.plot(data["x2"], data["y2"])

    plt.show()




.. image:: /examples/images/sphx_glr_example_002.png
    :class: sphx-glr-single-img





Adding some color and line style


.. code-block:: default


    fig = plt.figure(figsize=(8, 3))
    ax1, ax2 = fplt.make_grid(fig, nrows=1, ncols=2)

    style = {"linestyle": "-", "linewidth": 2}
    blue = fplt.COLORS["PT"]["VB"]["blue"]
    red = fplt.COLORS["PT"]["VB"]["red"]

    (lh1,) = ax1.plot(data["x1"], data["y1"], color=red, **style)
    (lh2,) = ax2.plot(data["x2"], data["y2"], color=blue, **style)

    plt.show()




.. image:: /examples/images/sphx_glr_example_003.png
    :class: sphx-glr-single-img





Removing the frame


.. code-block:: default


    fig = plt.figure(figsize=(8, 3))
    ax1, ax2 = fplt.make_grid(fig, nrows=1, ncols=2)

    style = {"linestyle": "-", "linewidth": 2}

    (lh1,) = ax1.plot(data["x1"], data["y1"], color=red, **style)
    (lh2,) = ax2.plot(data["x2"], data["y2"], color=blue, **style)

    fplt.hide_frame(ax1, ax2, left=False, bottom=False, top=True, right=True)

    plt.show()




.. image:: /examples/images/sphx_glr_example_004.png
    :class: sphx-glr-single-img





Normalizing the y limits


.. code-block:: default


    fig = plt.figure(figsize=(8, 3))
    ax1, ax2 = fplt.make_grid(fig, nrows=1, ncols=2)

    style = {"linestyle": "-", "linewidth": 2}

    (lh1,) = ax1.plot(data["x1"], data["y1"], color=red, **style)
    (lh2,) = ax2.plot(data["x2"], data["y2"], color=blue, **style)

    fplt.hide_frame(ax1, ax2, left=False, bottom=False, top=True, right=True)
    fplt.normalize_y_axis(ax1, ax2)

    plt.show()




.. image:: /examples/images/sphx_glr_example_005.png
    :class: sphx-glr-single-img





On the same plot in log scale


.. code-block:: default


    fig = plt.figure(figsize=(4, 3))
    ax = fig.add_subplot(1, 1, 1)

    style = {"linestyle": "-", "linewidth": 2}

    (lh1,) = ax.plot(data["x1"], data["y1"], color=red, **style, label="Linear")
    (lh2,) = ax.plot(data["x2"], data["y2"], color=blue, **style, label="Sublinear")

    fplt.hide_frame(ax, left=False, bottom=False, top=True, right=True)
    ax.set_yscale("log")

    fplt.labelLine(lh1, x=70, align=False, manual_rotation=-40)
    fplt.labelLine(lh2, x=70, align=False, manual_rotation=0)

    plt.show()



.. image:: /examples/images/sphx_glr_example_006.png
    :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.751 seconds)


.. _sphx_glr_download_examples_example.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: example.py <example.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: example.ipynb <example.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
